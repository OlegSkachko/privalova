{"version":3,"sources":["ToDo.js","App.js","index.js"],"names":["ToDo","todo","toggleTask","removeTask","className","complete","onClick","id","task","task1","App","useState","JSON","parse","localStorage","getItem","todos","setTodos","userInput","setUserInput","userInput2","setUserInput2","filter","handleToggle","map","area1","setArea1","area2","setArea2","name","value","handleSubmit","e","preventDefault","newItem","Math","random","toString","substr","array","setItem","stringify","addTask","handleKeyPress","key","onChange","target","arr","split","i","length","j","join","placeholder","onSubmit","type","currentTarget","onKeyDown","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.322702ca.chunk.js","sourcesContent":["function ToDo({ todo, toggleTask, removeTask }) {\n    return (\n        <div key={todo.id} className=\"item-todo\">\n            <div \n                className={todo.complete ? \"item-text strike\" : \"item-text\"}\n                onClick={() => toggleTask(todo.id)}\n                >\n                слово: {todo.task} <br/>\n                перевод: {todo.task1} \n            </div>\n            <div className=\"item-delete\" onClick={() => removeTask(todo.id)}>\n                X\n            </div>\n        </div>\n    )\n}\n\nexport default ToDo","\nimport { useState } from 'react';\nimport './App.css';\nimport ToDo from './ToDo'\nimport ToDoForm from './ToDoForm'\n\nfunction App() {\n  const [todos, setTodos] = useState(JSON.parse(localStorage.getItem('todos')) || [])\n  const [Task2, setTask2] = useState([])\n  \nconst [userInput, setUserInput] = useState('')\nconst [userInput2, setUserInput2] = useState('')\n\n  const addTask = (userInput, userInput2) => {\n    if(userInput) {\n      const newItem = {\n        id: Math.random().toString(36).substr(2,9),\n        task: userInput,\n        task1: userInput2,\n        complete: false\n      }\n      let array = [...todos, newItem]\n      localStorage.setItem('todos', JSON.stringify(array) )\n      setTodos(array)\n    }\n  }\n  \n  \n\n\n  const removeTask = (id) => {\n    setTodos([...todos.filter((todo) => todo.id !== id)])\n  }\n\n  const handleToggle = (id) => {\n    setTodos([\n      ...todos.map((todo) => \n        todo.id === id ? { ...todo, complete: !todo.complete } : {...todo }\n      )\n    ])\n  }\n\n\n\n\nconst [area1, setArea1] = useState('')\nconst [area2, setArea2] = useState('')\n\nconst [inp1, setInp1] = useState('')\nconst [inp2, setInp2] = useState('')\n\nconst [translated, setTranslated] = useState([])\nconst [words, setWords] = useState([ {\n  name: 'hi',\n  value: 'привет',\n}])\n\n\n\nfunction translate() {\n  let arr = area1.split(' ')\n\n  for(let i=0; i<arr.length;i++) {\n    for(let j=0; j<todos.length;j++) {\n      if(todos[j].task === arr[i]) {\n        arr[i] =todos[j].task1\n      }\n    }\n  }\n  setArea2(arr.join(' '))\n}\nfunction add() {\n\n}\n\n\n\n\n    const handleChange = (e) => {\n        setUserInput(e.currentTarget.value)\n    }\n    const handleChange2 = (e) => {\n        setUserInput2(e.currentTarget.value)\n    }\n    \n    const handleSubmit = (e) => {\n        e.preventDefault()\n        addTask(userInput,userInput2)\n        setUserInput(\"\")\n        setUserInput2(\"\")\n    }\n\n    const handleKeyPress = (e) => {\n        if(e.key === \"Enter\") {\n            handleSubmit(e)\n        }\n    }\n\n\n\n  return (\n    <div className=\"App\">\n      Исходный текст<br/>\n      <textarea className='text' onChange={(e)=>setArea1(e.target.value)}></textarea>\n      <button onClick={translate}>перевести</button>\n       Переведенный текст <br/>\n      <textarea className='text' placeholder={area2}></textarea>\n  \n      <header>\n        <h1>Список cлов: {todos.length}</h1>\n      </header>\n      <form onSubmit={handleSubmit}>\n            <input \n                value={userInput}\n                type=\"text\"\n                onChange={handleChange}\n                onKeyDown={handleKeyPress}\n                placeholder=\"Введите слово...\"\n            />   \n             <input \n                value={userInput2}\n                type=\"text\"\n                onChange={handleChange2}\n                onKeyDown={handleKeyPress}\n                placeholder=\"Введите перевод...\"\n            />        \n            <button>Сохранить</button>\n        </form>\n      {todos.map((todo) => {\n        return (\n          <ToDo\n            todo={todo}\n            key={todo.id}\n            toggleTask={handleToggle}\n            removeTask={removeTask}\n            />\n        )\n      })}\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}